# netlify.toml

[build]
  # Command to build your project (not needed for simple Python function)
  # command = "echo 'No build command needed'"

  # Directory containing the serverless functions
  functions = "netlify/functions"

  # Directory with static files to publish (if you had a frontend)
  # publish = "public" # Example if you had a 'public' folder

# Optional: Specify Python version if needed (check Netlify docs for available versions)
[build.environment]
  PYTHON_VERSION = "3.9" # Or 3.8, 3.10, 3.11 etc.

# --- Function Routing (Redirects/Rewrites) ---

# Rule for the POST request to calculate cost
[[redirects]]
  # The public URL path users will POST to
  from = "/api/calculate"
  # The internal path to your function. Netlify automatically maps this
  # to /.netlify/functions/<function_filename_without_py>
  to = "/.netlify/functions/api"
  # Status 200 indicates a rewrite (proxy), not a redirect
  status = 200
  # Force the rewrite even if a file exists at the 'from' path
  force = true
  # Only apply this rule for POST requests
  methods = ["POST"]

# Rule for the GET request to check status
[[redirects]]
  # The public URL path users will GET
  from = "/api/status" # Or could be the same as POST path if you prefer
  # The internal path to your function
  to = "/.netlify/functions/api"
  status = 200
  force = true
  methods = ["GET"]

# You could potentially combine the above GET/POST rules using a wildcard
# if your Flask app handles multiple methods on the same route internally,
# but separate rules are often clearer.

# Example of a broader rewrite if your Flask app had more routes under /api/:
# [[redirects]]
#   from = "/api/*"
#   to = "/.netlify/functions/api/:splat"
#   status = 200
#   force = true
